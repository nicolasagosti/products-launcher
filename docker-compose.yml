version: '3'


services:

  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"
    
  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222
 
  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db
    
  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=postgres://postgres:123456@orders-db:5432/ordersdb
      - NATS_SERVERS=nats://nats-server:4222

  orders-db:
    container_name: orders_database
    image: postgres:16.2
    volumes:
    ## esto lo que me va a permitir es enlace mi carpeta ./postgres de mi file system con el file sistem del contenedor: /var/lib/postgressql/data
    ## lo que me va a permitir destruir el contenedor sin que se pierda la data
      - ./orders-ms/postgres:/var/lib/postgressql/data
    ports: 
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb

# ===================================== #
#       Payments Microservice
# ===================================== #
  payments-ms:
    container_name: payments-ms
    build: ./payments-ms
    ports:
      - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVERS=nats://nats-server:4222
      - STRIPE_SECRET=${STRIPE_SECRET}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_ENDPOINTSECRET=${STRIPE_ENDPOINTSECRET}
